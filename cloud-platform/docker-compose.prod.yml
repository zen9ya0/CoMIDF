version: '3.8'

services:
  nginx:
    image: nginx:alpine
    container_name: comidf-nginx
    ports:
      - "443:443"
      - "80:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
      - ./nginx/logs:/var/log/nginx
    depends_on:
      - ingress
      - key_manager
    restart: unless-stopped
    networks:
      - comidf_network

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: comidf-zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    volumes:
      - zookeeper_data:/var/lib/zookeeper/data
      - zookeeper_logs:/var/lib/zookeeper/log
    networks:
      - comidf_network

  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: comidf-kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_INTERNAL://kafka:9093
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT_INTERNAL
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
    volumes:
      - kafka_data:/var/lib/kafka/data
    networks:
      - comidf_network

  redis:
    image: redis:7-alpine
    container_name: comidf-redis
    command: redis-server --requirepass ${REDIS_PASSWORD:-change_me}
    volumes:
      - redis_data:/data
    networks:
      - comidf_network

  postgres:
    image: postgres:15-alpine
    container_name: comidf-postgres
    environment:
      POSTGRES_DB: comidf
      POSTGRES_USER: comidf
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-change_me}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - comidf_network

  ingress:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: comidf-ingress
    environment:
      KAFKA_BROKERS: kafka:9092
      REDIS_HOST: redis
      REDIS_PORT: 6379
      REDIS_PASSWORD: ${REDIS_PASSWORD:-change_me}
      LOG_LEVEL: INFO
    depends_on:
      - kafka
      - redis
    networks:
      - comidf_network
    restart: unless-stopped

  key_manager:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: comidf-key-manager
    command: python services/key_manager.py
    environment:
      DATABASE_URL: postgresql://comidf:${POSTGRES_PASSWORD:-change_me}@postgres:5432/comidf
      LOG_LEVEL: INFO
    depends_on:
      - postgres
    ports:
      - "9090:9090"
    networks:
      - comidf_network
    restart: unless-stopped

networks:
  comidf_network:
    driver: bridge

volumes:
  zookeeper_data:
  zookeeper_logs:
  kafka_data:
  redis_data:
  postgres_data:

